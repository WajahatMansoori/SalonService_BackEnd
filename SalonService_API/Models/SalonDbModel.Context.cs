//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SalonService_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SalonDBEntities : DbContext
    {
        public SalonDBEntities()
            : base("name=SalonDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<SalonFacilitator> SalonFacilitators { get; set; }
        public virtual DbSet<SalonProduct> SalonProducts { get; set; }
        public virtual DbSet<SalonService> SalonServices { get; set; }
        public virtual DbSet<SolonAppointment> SolonAppointments { get; set; }
    
        public virtual int Admin_Delete_SalonFacilitator(Nullable<int> salonFacilitator)
        {
            var salonFacilitatorParameter = salonFacilitator.HasValue ?
                new ObjectParameter("SalonFacilitator", salonFacilitator) :
                new ObjectParameter("SalonFacilitator", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_Delete_SalonFacilitator", salonFacilitatorParameter);
        }
    
        public virtual int Admin_Delete_SalonServices(Nullable<int> serviceId)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_Delete_SalonServices", serviceIdParameter);
        }
    
        public virtual int Admin_Delete_SolonProduct(Nullable<int> solonProduct)
        {
            var solonProductParameter = solonProduct.HasValue ?
                new ObjectParameter("SolonProduct", solonProduct) :
                new ObjectParameter("SolonProduct", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_Delete_SolonProduct", solonProductParameter);
        }
    
        public virtual int Admin_Insert_Invoices(Nullable<int> productId, Nullable<int> invoiceAmount, Nullable<System.DateTime> invoiceDate, Nullable<int> quantity)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var invoiceAmountParameter = invoiceAmount.HasValue ?
                new ObjectParameter("InvoiceAmount", invoiceAmount) :
                new ObjectParameter("InvoiceAmount", typeof(int));
    
            var invoiceDateParameter = invoiceDate.HasValue ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(System.DateTime));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_Insert_Invoices", productIdParameter, invoiceAmountParameter, invoiceDateParameter, quantityParameter);
        }
    
        public virtual int Admin_Insert_SalonFacilitator(string facilitatorName, Nullable<int> salary)
        {
            var facilitatorNameParameter = facilitatorName != null ?
                new ObjectParameter("FacilitatorName", facilitatorName) :
                new ObjectParameter("FacilitatorName", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_Insert_SalonFacilitator", facilitatorNameParameter, salaryParameter);
        }
    
        public virtual int Admin_Insert_SalonServices(string serviceName, Nullable<int> servicePrice)
        {
            var serviceNameParameter = serviceName != null ?
                new ObjectParameter("ServiceName", serviceName) :
                new ObjectParameter("ServiceName", typeof(string));
    
            var servicePriceParameter = servicePrice.HasValue ?
                new ObjectParameter("ServicePrice", servicePrice) :
                new ObjectParameter("ServicePrice", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_Insert_SalonServices", serviceNameParameter, servicePriceParameter);
        }
    
        public virtual int Admin_Insert_SlonProduct(string productName)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_Insert_SlonProduct", productNameParameter);
        }
    
        public virtual ObjectResult<string> Admin_Insert_SolonAppointment(string clientName, string clientPhone, string serviceId, Nullable<int> facilitatorId, Nullable<System.DateTime> appointmentDate)
        {
            var clientNameParameter = clientName != null ?
                new ObjectParameter("ClientName", clientName) :
                new ObjectParameter("ClientName", typeof(string));
    
            var clientPhoneParameter = clientPhone != null ?
                new ObjectParameter("ClientPhone", clientPhone) :
                new ObjectParameter("ClientPhone", typeof(string));
    
            var serviceIdParameter = serviceId != null ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(string));
    
            var facilitatorIdParameter = facilitatorId.HasValue ?
                new ObjectParameter("FacilitatorId", facilitatorId) :
                new ObjectParameter("FacilitatorId", typeof(int));
    
            var appointmentDateParameter = appointmentDate.HasValue ?
                new ObjectParameter("AppointmentDate", appointmentDate) :
                new ObjectParameter("AppointmentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Admin_Insert_SolonAppointment", clientNameParameter, clientPhoneParameter, serviceIdParameter, facilitatorIdParameter, appointmentDateParameter);
        }
    
        public virtual ObjectResult<Admin_Select_Invoices_Result> Admin_Select_Invoices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Select_Invoices_Result>("Admin_Select_Invoices");
        }
    
        public virtual ObjectResult<Admin_Select_SalonFacilitator_Result> Admin_Select_SalonFacilitator()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Select_SalonFacilitator_Result>("Admin_Select_SalonFacilitator");
        }
    
        public virtual ObjectResult<Admin_Select_SalonServices_Result> Admin_Select_SalonServices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Select_SalonServices_Result>("Admin_Select_SalonServices");
        }
    
        public virtual ObjectResult<Admin_Select_SolonAppointment_Result> Admin_Select_SolonAppointment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Select_SolonAppointment_Result>("Admin_Select_SolonAppointment");
        }
    
        public virtual ObjectResult<Admin_Select_SolonProduct_Result> Admin_Select_SolonProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Select_SolonProduct_Result>("Admin_Select_SolonProduct");
        }
    
        public virtual int Admin_Update_ClientServiceServed(Nullable<int> facilitatorId)
        {
            var facilitatorIdParameter = facilitatorId.HasValue ?
                new ObjectParameter("FacilitatorId", facilitatorId) :
                new ObjectParameter("FacilitatorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_Update_ClientServiceServed", facilitatorIdParameter);
        }
    
        public virtual int Admin_Update_SalonFacilitator(Nullable<int> facId, string facilitatorName, Nullable<int> salary)
        {
            var facIdParameter = facId.HasValue ?
                new ObjectParameter("FacId", facId) :
                new ObjectParameter("FacId", typeof(int));
    
            var facilitatorNameParameter = facilitatorName != null ?
                new ObjectParameter("FacilitatorName", facilitatorName) :
                new ObjectParameter("FacilitatorName", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_Update_SalonFacilitator", facIdParameter, facilitatorNameParameter, salaryParameter);
        }
    
        public virtual int Admin_Update_SalonServices(Nullable<int> serviceId, string serviceName, Nullable<int> servicePrice)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var serviceNameParameter = serviceName != null ?
                new ObjectParameter("ServiceName", serviceName) :
                new ObjectParameter("ServiceName", typeof(string));
    
            var servicePriceParameter = servicePrice.HasValue ?
                new ObjectParameter("ServicePrice", servicePrice) :
                new ObjectParameter("ServicePrice", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_Update_SalonServices", serviceIdParameter, serviceNameParameter, servicePriceParameter);
        }
    
        public virtual int Admin_Update_SlonProduct(Nullable<int> prodId, string productName)
        {
            var prodIdParameter = prodId.HasValue ?
                new ObjectParameter("ProdId", prodId) :
                new ObjectParameter("ProdId", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_Update_SlonProduct", prodIdParameter, productNameParameter);
        }
    }
}
